










notes on what I did for readme-sync:
-created an example subset of the docs from an export
- migrated into the specifed directory format
-downloaded some images manually
  -stuck them in an images dir sibling to my docs dir
  -since readme doesn't export images: changed references from exported https to be for those local images

nvm install
npm install

npx ts-node sync/index.ts --apiKey <key> --version 4.0 --docs /mnt/c/Users/franc/Documents/GitHub/rollouts-test/subset/docs/ 

C:\Users\franc\Documents\Optimizely\TEST_SYNC\subset\docs


(the markdown is a small subset of rollouts; just the 'setup' category)



Steps I took:

- exported the rollouts doc project
- chose a small subset to play with: 'setup'
- created v4.0 in the web ui
- restructured the dirs, renamed files according to the readme-sync tool conventions
- manually downloaded an image from the docs (since readme doesn't actually export the images)

- ran (in my case) npx ts-node sync/index.ts --apiKey <key> --version 4.0 --docs /mnt/c/Users/franc/Documents/GitHub/rollouts-test/docs/ 
 
 or:
 npx ts-node sync/index.ts --apiKey <key> --version 4.0 --docs //home/frances/GitHub/rollouts-test/docs/
 

..and it works!

**images experiments**

So the 1st thing I want to test is, how do I get images? (readme export doesn't actually export the images)

Well, I manually downloaded some images, stored them in my github repo, and then tried to reference them in a native ReadMe image block.

that was a no-go; seems those image blocks maybe only accept readme urls?



Anyway so then I just tried a 'normal' markdown image syntax and that works, yay!

Behold this image originally in readme, now saved at 

 https://raw.githubusercontent.com/fscelliott/rollouts-test/master/images/6f02eed-new_environment.png :  

1. ![test image](https://raw.githubusercontent.com/fscelliott/rollouts-test/master/images/6f02eed-new_environment.png) .

  

  **next steps/questions**: 

- how does  'suggest edits'  work with this?
- how does changes made in the web ui work with this?(I assume this tool would just overwrite whatever changes were made in the web ui) -- update, yup, I think the web UI gives me a merge conflict warning...

  
  NOTES ON BEHAVIOR:

**RANDOME NOTES**  
- if you try to duplicate mardkown file names, you'll get duplicate file warnings, even if the files are in separate categories.
- (I believe?) categories have to be lower cased and w/ dashs, so "Getting Started" would be a dir named "getting-started"
- Q: what if you have some md files ordered like 00 - blah.md, 02 - blah.md, etc, and you create locally an unordered file like a-page.md? What happens with ordering?
    A: sorting is alphanumeric. your ordered pages go first, then a-page.md gets created and added at the end of the category.


- **ACROSS** multiple categories: how does syncing of pages work? :
  - Q: I have a subset of categories to sync locally, and a superset of categories in the web UI? What happens?
    - A: Only the subset of local categories gets synced.any category that doesn't have a local directory is untouched

- **WITHIN** 1 category: how does syncing of pages work? :
  - Q I have a superset of docs in the web UI in 1 category, and only sync a local subset of them. do the other docs in the web UI get deleted?
    - A: yes, the superset of docs in the web UI is deleted, and now your category only contains the subset of docs you synced locally.
  - Q: I have a superset of docs in Github in 1 category, and only a subset in the web UI. do the docs get added to the web ui?
    - A: yup, the local docs get created in the web UI.

